# Yappatron - Build and run language models quickly and easily
# Copyright (C) 2025 COHEJH <jcohenkadosh@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.

# == Imports ==
import pickle, halo
from inferMarkov import inferMarkov

# == Inference ==
def inferModel(modelPath:str):
    loadSpinner = halo.Halo(text='Loading model... (This could take a while, espcially with larger models)', spinner=spinAnimation) # type: ignore (Variable is global)
    loadSpinner.start()
    try:
        with open(modelPath, "rb") as modelSource:
            model: dict = pickle.load(modelSource)
    except FileNotFoundError:
        print("The model does not exist. Are you sure the path is correct?")
        return
    loadSpinner.succeed(f"Model loaded")
    
    match model.get("arch"):
        case "Markov Chain":
            infer = lambda text: inferMarkov(text, model.get("window"), model["model"], maxLength) # type: ignore (Global)
        case _:
            print("Unrecognised model, are you sure this model was generated by Yappatron?")
            return
        
    try:
        while True:
            infer(input("User: "))
    except KeyboardInterrupt:
        return